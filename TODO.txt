+ ConcurrentHashMap -> Map
+ BufferedWriter -> Writer
+ TrLog
+ move readClients out from constructor
+ synchronize createClient
+ start thread for TrLogging
+ Repository, interface -> dao
+ Gson serialization
+ make thread pool with ExecutorService in test
- ByteArrayOutputStream
+ search by substring (guava filter, Predicate)
+ measure 1 mln transactions performance

+ Collections.unmodifiableMap -> don't expose internal state

Use local resource refs _only_ under target or generated subfolder (new File( "./target/" + CLIENT_REPOSITORY_LOG_CSV);)
Separator should not be hardcoded, at least use /

use [http://en.wikipedia.org/wiki/Strategy_pattern] for Transaction Log write / flush: implement 
-fixed width, 
-fixed transaction number
-delegating (delegates everything to Writer)

createClient / updateClient -> saveClient

http://en.wikipedia.org/wiki/Template_method_pattern - for atomic updates

Speing IoC:
read:
http://static.springsource.org/spring/docs/3.1.x/spring-framework-reference/html/overview.html#overview-dependency-injection
http://static.springsource.org/spring/docs/3.1.x/spring-framework-reference/html/beans.html

add spring-core dependency and configure context for (txWriter, repository, service) -> create test for context conf (start context -> get service instance -> make some changes -> restart context -> check that changes are in place)
debug full context start/stop process (xml conf load, beandefinitionTree, beanPostProcessor, bean instance creation, bean instance destroy)